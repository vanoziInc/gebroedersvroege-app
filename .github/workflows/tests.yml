name: Tests

on:
  pull_request:
    branches:
    - master

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
      MAIL_FROM: ${{ secrets.MAIL_FROM }}
      MAIL_PORT: ${{ secrets.MAIL_PORT }}
      MAIL_SERVER: ${{ secrets.MAIL_SERVER }}
      MAIL_FROM_NAME: ${{ secrets.MAIL_FROM_NAME }}
      MAIL_TLS: ${{ secrets.MAIL_TLS }}
      MAIL_SSL: ${{ secrets.MAIL_SSL }}
      BASE_URL_FRONTEND: ${{ secrets.BASE_URL_FRONTEND }}
      BASE_URL_API: ${{ secrets.BASE_URL_API }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DATABASE_TEST_BACKEND_URL: ${{ secrets.DATABASE_TEST_BACKEND_URL }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
    steps:
    # CHECKOUT THE CODE
      - uses: actions/checkout@v2
    # CHECK CODE VIOLATIONS WITH FLAKE 8
      - uses: tonybajan/flake8-check-action@v1.0.0
      with:
        # select: E3,E4,E5,E7,W6,F,B,G0
        # maxlinelength: 100
        repotoken: ${{ secrets.GITHUB_TOKEN }}
    # SETUP PYTHON ENVIRONMENT FOR RUNNING THE FRONTEND TEST OUTSIDE CONTAINERS LATER ON
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          cache: 'pip'
    # BUILD THE APPLICATION
      - name: Build and run the docker compose stack
        run: docker-compose -f "docker-compose-test.yml" up -d

      # BACKEND TESTS
      - name: Perform unit and api tests
        run: docker exec fastapi python -m pytest -v --cov=app --cov-report html:cov_html --cov-config=tests/.coveragerc -m "apitest or unittest" --html=backend-test-report.html --self-contained-html
      - name: Copy backend test report and coverage report from container to host
        run: | 
          docker cp fastapi:/app/backend-test-report.html .
          docker cp fastapi:/app/cov_html .

      # FRONTEND TESTS
      - name: Setup database for UI tests
        run: | 
          docker exec fastapi aerich init -t app.db.TORTOISE_ORM
          docker exec fastapi aerich init-db
          docker exec fastapi aerich upgrade
          docker exec database psql -U postgres -d test -f setup_testdata.sql
      - name: Install test dependencies
        run: |
          pip install -r ./backend/tests/frontend/requirements.txt
          playwright install
      - name: Perform UI tests
        run: pytest ./backend/tests/frontend/ --html=frontend-test-report.html --self-contained-html

      # ARCHIVE TEST REPORTS
      - name: Archive test report
        uses: actions/upload-artifact@v2
        with:
          name: Test reports and coverage report
          path: |
            ./backend-test-report.html
            ./frontend-test-report.html
            ./cov_html